{"ast":null,"code":"const {\n  createSlice\n} = require('@reduxjs/toolkit');\n\nconst STATUSES = Object.freeze({\n  IDLE: 'idle',\n  ERROR: 'error',\n  LOADING: 'loading'\n});\nconst productSlice = createSlice({\n  name: 'product',\n  initialState: {\n    date: [],\n    status: STATUSES.IDLE\n  },\n  reducers: {\n    setProducts(state, action) {\n      state.data = action.payload;\n    },\n\n    setProducts(state, action) {\n      state.data = action.payload;\n    }\n\n  }\n});\nexport const {\n  setProducts,\n  setStatus\n} = productSlice.actions;\nexport default productSlice.reducer;\nexport function fetchProducts() {\n  return async function fetchProductThunk(dispatch, getState) {\n    dispatch(setStatus(STATUSES.LOADING));\n\n    try {\n      const res = await fetch('https://fakestoreapi.com/products');\n      const data = await res.json();\n      dispatch(setProducts(data));\n      dispatch(setProducts(STATUSES.IDLE));\n    } catch (err) {\n      console.log(err);\n      dispatch(setStatus(STATUSES.ERROR));\n    }\n  };\n}","map":{"version":3,"names":["createSlice","require","STATUSES","Object","freeze","IDLE","ERROR","LOADING","productSlice","name","initialState","date","status","reducers","setProducts","state","action","data","payload","setStatus","actions","reducer","fetchProducts","fetchProductThunk","dispatch","getState","res","fetch","json","err","console","log"],"sources":["D:/React Ecommerce/ecommerce/src/store/productSlice.js"],"sourcesContent":["const { createSlice } = require('@reduxjs/toolkit');\r\n\r\nconst STATUSES = Object.freeze({\r\n    IDLE: 'idle',\r\n    ERROR: 'error',\r\n    LOADING: 'loading',\r\n\r\n});\r\n\r\nconst productSlice = createSlice({\r\n    name: 'product',\r\n    initialState: {\r\n        date:[],\r\n        status: STATUSES.IDLE,\r\n    },\r\n    reducers: {\r\n        setProducts(state, action) {\r\n           \r\n            state.data = action.payload;\r\n        },\r\n\r\n        setProducts(state,action) {\r\n            state.data = action.payload;\r\n        }\r\n   \r\n    },\r\n});\r\n\r\nexport const { setProducts,setStatus} = productSlice.actions;\r\nexport default productSlice.reducer;\r\n\r\n\r\nexport function fetchProducts() {\r\n    return async function fetchProductThunk(dispatch,getState){\r\n        dispatch(setStatus(STATUSES.LOADING))\r\n        try {\r\n            const res = await fetch('https://fakestoreapi.com/products')\r\n            const data = await res.json();\r\n            dispatch(setProducts(data));\r\n            dispatch(setProducts(STATUSES.IDLE))\r\n        } catch(err) {\r\n            console.log(err)\r\n            dispatch(setStatus(STATUSES.ERROR));\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,MAAM;EAAEA;AAAF,IAAkBC,OAAO,CAAC,kBAAD,CAA/B;;AAEA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc;EAC3BC,IAAI,EAAE,MADqB;EAE3BC,KAAK,EAAE,OAFoB;EAG3BC,OAAO,EAAE;AAHkB,CAAd,CAAjB;AAOA,MAAMC,YAAY,GAAGR,WAAW,CAAC;EAC7BS,IAAI,EAAE,SADuB;EAE7BC,YAAY,EAAE;IACVC,IAAI,EAAC,EADK;IAEVC,MAAM,EAAEV,QAAQ,CAACG;EAFP,CAFe;EAM7BQ,QAAQ,EAAE;IACNC,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;MAEvBD,KAAK,CAACE,IAAN,GAAaD,MAAM,CAACE,OAApB;IACH,CAJK;;IAMNJ,WAAW,CAACC,KAAD,EAAOC,MAAP,EAAe;MACtBD,KAAK,CAACE,IAAN,GAAaD,MAAM,CAACE,OAApB;IACH;;EARK;AANmB,CAAD,CAAhC;AAmBA,OAAO,MAAM;EAAEJ,WAAF;EAAcK;AAAd,IAA2BX,YAAY,CAACY,OAA9C;AACP,eAAeZ,YAAY,CAACa,OAA5B;AAGA,OAAO,SAASC,aAAT,GAAyB;EAC5B,OAAO,eAAeC,iBAAf,CAAiCC,QAAjC,EAA0CC,QAA1C,EAAmD;IACtDD,QAAQ,CAACL,SAAS,CAACjB,QAAQ,CAACK,OAAV,CAAV,CAAR;;IACA,IAAI;MACA,MAAMmB,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAAvB;MACA,MAAMV,IAAI,GAAG,MAAMS,GAAG,CAACE,IAAJ,EAAnB;MACAJ,QAAQ,CAACV,WAAW,CAACG,IAAD,CAAZ,CAAR;MACAO,QAAQ,CAACV,WAAW,CAACZ,QAAQ,CAACG,IAAV,CAAZ,CAAR;IACH,CALD,CAKE,OAAMwB,GAAN,EAAW;MACTC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACAL,QAAQ,CAACL,SAAS,CAACjB,QAAQ,CAACI,KAAV,CAAV,CAAR;IACH;EACJ,CAXD;AAYH"},"metadata":{},"sourceType":"module"}